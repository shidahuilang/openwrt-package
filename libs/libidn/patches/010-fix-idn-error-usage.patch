--- a/src/idn.c
+++ b/src/idn.c
@@ -169,7 +169,7 @@ main (int argc, char *argv[])
       (args_info.idna_to_unicode_given ? 1 : 0) +
       (args_info.nfkc_given ? 1 : 0) != 1)
     {
-      error (0, 0,
+      error (0, 0, "%s",
 	     _("only one of -s, -e, -d, -a, -u or -n can be specified"));
       usage (EXIT_FAILURE);
     }
@@ -183,7 +183,7 @@ main (int argc, char *argv[])
 
   if (!args_info.quiet_given
       && args_info.inputs_num == 0 && isatty (fileno (stdin)))
-    fprintf (stderr, _("Type each input string on a line by itself, "
+    fprintf (stderr, "%s", _("Type each input string on a line by itself, "
 		       "terminated by a newline character.\n"));
 
   do
@@ -195,7 +195,7 @@ main (int argc, char *argv[])
 	  if (feof (stdin))
 	    break;
 
-	  error (EXIT_FAILURE, errno, _("input error"));
+	  error (EXIT_FAILURE, errno, "%s", _("input error"));
 	}
 
       if (strlen (line) > 0)
@@ -213,7 +213,7 @@ main (int argc, char *argv[])
 	  if (!q)
 	    {
 	      free (p);
-	      error (EXIT_FAILURE, 0,
+	      error (EXIT_FAILURE, 0, "%s",
 		     _("could not convert from UTF-8 to UCS-4"));
 	    }
 
@@ -238,7 +238,7 @@ main (int argc, char *argv[])
 	  if (!q)
 	    {
 	      free (r);
-	      error (EXIT_FAILURE, 0,
+	      error (EXIT_FAILURE, 0, "%s",
 		     _("could not convert from UTF-8 to UCS-4"));
 	    }
 
@@ -275,7 +275,7 @@ main (int argc, char *argv[])
 	  q = stringprep_utf8_to_ucs4 (p, -1, &len);
 	  free (p);
 	  if (!q)
-	    error (EXIT_FAILURE, 0,
+	    error (EXIT_FAILURE, 0, "%s",
 		   _("could not convert from UTF-8 to UCS-4"));
 
 	  if (args_info.debug_given)
@@ -334,7 +334,7 @@ main (int argc, char *argv[])
 	  r = stringprep_ucs4_to_utf8 (q, -1, NULL, NULL);
 	  free (q);
 	  if (!r)
-	    error (EXIT_FAILURE, 0,
+	    error (EXIT_FAILURE, 0, "%s",
 		   _("could not convert from UCS-4 to UTF-8"));
 
 	  p = stringprep_utf8_to_locale (r);
@@ -358,7 +358,7 @@ main (int argc, char *argv[])
 	  q = stringprep_utf8_to_ucs4 (p, -1, NULL);
 	  free (p);
 	  if (!q)
-	    error (EXIT_FAILURE, 0,
+	    error (EXIT_FAILURE, 0, "%s",
 		   _("could not convert from UCS-4 to UTF-8"));
 
 	  if (args_info.debug_given)
@@ -436,7 +436,7 @@ main (int argc, char *argv[])
 	  if (!q)
 	    {
 	      free (p);
-	      error (EXIT_FAILURE, 0,
+	      error (EXIT_FAILURE, 0, "%s",
 		     _("could not convert from UCS-4 to UTF-8"));
 	    }
 
@@ -492,7 +492,7 @@ main (int argc, char *argv[])
 	  r = stringprep_ucs4_to_utf8 (q, -1, NULL, NULL);
 	  free (q);
 	  if (!r)
-	    error (EXIT_FAILURE, 0,
+	    error (EXIT_FAILURE, 0, "%s",
 		   _("could not convert from UTF-8 to UCS-4"));
 
 	  p = stringprep_utf8_to_locale (r);
@@ -521,7 +521,7 @@ main (int argc, char *argv[])
 	      if (!q)
 		{
 		  free (p);
-		  error (EXIT_FAILURE, 0,
+		  error (EXIT_FAILURE, 0, "%s",
 			 _("could not convert from UTF-8 to UCS-4"));
 		}
 
@@ -535,7 +535,7 @@ main (int argc, char *argv[])
 	  r = stringprep_utf8_nfkc_normalize (p, -1);
 	  free (p);
 	  if (!r)
-	    error (EXIT_FAILURE, 0, _("could not do NFKC normalization"));
+	    error (EXIT_FAILURE, 0, "%s", _("could not do NFKC normalization"));
 
 	  if (args_info.debug_given)
 	    {
@@ -545,7 +545,7 @@ main (int argc, char *argv[])
 	      if (!q)
 		{
 		  free (r);
-		  error (EXIT_FAILURE, 0,
+		  error (EXIT_FAILURE, 0, "%s",
 			 _("could not convert from UTF-8 to UCS-4"));
 		}
 
