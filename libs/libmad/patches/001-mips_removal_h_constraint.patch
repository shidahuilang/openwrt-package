--- a/fixed.h
+++ b/fixed.h
@@ -299,6 +299,23 @@ mad_fixed_t mad_f_mul_inline(mad_fixed_t
 
 # elif defined(FPM_MIPS)
 
+/* Test for gcc >= maj.min, as per __GNUC_PREREQ in glibc */
+#if defined (__GNUC__) && defined (__GNUC_MINOR__)
+#define __GNUC_PREREQ(maj, min) \
+	((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
+#else
+#define __GNUC_PREREQ(maj, min)  0
+#endif
+
+#if __GNUC_PREREQ(4,4)
+  typedef unsigned int u64_di_t __attribute__ ((mode (DI)));
+# define MAD_F_MLX(hi, lo, x, y) \
+   do { \
+      u64_di_t __ll = (u64_di_t) (x) * (y); \
+      hi = __ll >> 32; \
+      lo = __ll; \
+   } while (0) 
+#else
 /*
  * This MIPS version is fast and accurate; the disposition of the least
  * significant bit depends on OPT_ACCURACY via mad_f_scale64().
@@ -328,6 +345,7 @@ mad_fixed_t mad_f_mul_inline(mad_fixed_t
 	 : "%r" ((x) >> 12), "r" ((y) >> 16))
 #  define MAD_F_MLZ(hi, lo)  ((mad_fixed_t) (lo))
 # endif
+#endif /* __GNU_PREREQ(4,4) */
 
 # if defined(OPT_SPEED)
 #  define mad_f_scale64(hi, lo)  \
--- a/mad.h
+++ b/mad.h
@@ -344,6 +344,23 @@ mad_fixed_t mad_f_mul_inline(mad_fixed_t
 
 # elif defined(FPM_MIPS)
 
+/* Test for gcc >= maj.min, as per __GNUC_PREREQ in glibc */
+#if defined (__GNUC__) && defined (__GNUC_MINOR__)
+#define __GNUC_PREREQ(maj, min) \
+	((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
+#else
+#define __GNUC_PREREQ(maj, min)  0
+#endif
+
+#if __GNUC_PREREQ(4,4)
+  typedef unsigned int u64_di_t __attribute__ ((mode (DI)));
+# define MAD_F_MLX(hi, lo, x, y) \
+   do { \
+      u64_di_t __ll = (u64_di_t) (x) * (y); \
+      hi = __ll >> 32; \
+      lo = __ll; \
+   } while (0) 
+#else
 /*
  * This MIPS version is fast and accurate; the disposition of the least
  * significant bit depends on OPT_ACCURACY via mad_f_scale64().
@@ -373,6 +390,7 @@ mad_fixed_t mad_f_mul_inline(mad_fixed_t
 	 : "%r" ((x) >> 12), "r" ((y) >> 16))
 #  define MAD_F_MLZ(hi, lo)  ((mad_fixed_t) (lo))
 # endif
+#endif /* __GNU_PREREQ(4,4) */
 
 # if defined(OPT_SPEED)
 #  define mad_f_scale64(hi, lo)  \
