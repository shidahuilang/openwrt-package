#!/bin/sh

#   luci-theme-kucat
#   Copyright (C) 2019-2024 The Sirpdboy Team <herboy2008@gmail.com> 
# 
#   Have a bug? Please create an issue here on GitHub!
#       https://github.com/sirpdboy/luci-theme-kucat/issues
# 
# Licensed to the public under the Apache License 2.0

# author github@sirpdboy
kucat='kucat'
[ -s "/etc/config/advancedplus" ] && kucat='advancedplus'
background="$(uci -q get $kucat.@basic[0].background || echo '0')"
KUCATTMP="/var/kucat_date_${background}.tmp"
BGURL="/www/luci-static/kucat/img/down${background}.jpg"
REBGURL="/luci-static/kucat/img/down${background}.jpg"
DFBGURL="/luci-static/kucat/img/bg1.jpg"
LOCK="/var/lock/kucat_lock_${background}.lock"

curl_bgurl() {
	case "$background" in
	1)
		local ppath=`curl -s 'https://open.iciba.com/dsapi/' | jsonfilter -qe '@.picture4'`
		[ -n "${ppath}" ] && echo "$ppath"
		;;
	2)
		local ppath="$(curl -s "https://source.unsplash.com/1920x1080/daily?wallpapers" 2>&1 |grep -Eo "photo-\w+-\w+" | head -n1)"
		[ -n "${ppath}" ] && echo "https://images.unsplash.com/${ppath}?fm=jpg&fit=crop&w=1920&h=1080"
		;;
	3)
		local ppath=`curl -s  "https://www.bing.com/HPImageArchive.aspx?format=js&n=1" |jsonfilter -qe '@.images[0].url'`
		[ -n "${ppath}" ] && echo "https://www.bing.com${ppath}"
		;;
	4)
		local i=`awk 'BEGIN{srand();print int(rand()*8)}'`
		local j=`awk 'BEGIN{srand();print int(rand()*200)}'`
		local ppath=`curl -s "http://wp.birdpaper.com.cn/intf/search?content=4k&pageno=$j&count=9" | awk -F '\"count\":9' '{print $2}' | awk -F ',\"processTime\"' '{print $1}' | sed 's#,#{#' |  jsonfilter -e "@.list[$i].url"`
		[ -n "${ppath}" ] && echo "$ppath"
		;;
	esac
}

bgurl_down() {
		local bgurl="$(curl_bgurl)"
		if [ -n "$bgurl" ]; then
			rm -rf $BGURL
			curl -kLfsm 3 $bgurl -o $BGURL
			date +%Y%m%d > $KUCATTMP
		fi
	[ -s "$BGURL" ] && echo -ne $REBGURL || echo -ne $DFBGURL
}

check_url() {
	if [ -s $KUCATTMP ]; then
		localtime=`cat $KUCATTMP | grep $(date +%Y%m%d) `
		if [ $localtime ]; then
		   if  [ -s $BGURL ] ; then
		        echo -ne $REBGURL 
			return
		   fi
		fi
	fi
checknet=`ping -c 1 -W 1 223.5.5.5 > /dev/null 2>&1 &&echo 1 || echo 2`
if [ "x$checknet" == "x1" ]; then 
	bgurl_down
else
	[ -s "$DFBGURL" ] && echo -ne $DFBGURL
fi
}
check_url