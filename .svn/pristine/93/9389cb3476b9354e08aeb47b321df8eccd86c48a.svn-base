--- a/lib/commands/toolcontext.c
+++ b/lib/commands/toolcontext.c
@@ -1619,7 +1619,7 @@ struct cmd_context *create_toolcontext(u
 	/* FIXME Make this configurable? */
 	reset_lvm_errno(1);
 
-#ifndef VALGRIND_POOL
+#if defined(__GLIBC__) && !defined(VALGRIND_POOL)
 	/* Set in/out stream buffering before glibc */
 	if (set_buffering
 #ifdef SYS_gettid
@@ -2006,7 +2006,7 @@ void destroy_toolcontext(struct cmd_cont
 
 	if (cmd->pending_delete_mem)
 		dm_pool_destroy(cmd->pending_delete_mem);
-#ifndef VALGRIND_POOL
+#if defined(__GLIBC__) && !defined(VALGRIND_POOL)
 	if (cmd->linebuffer) {
 		/* Reset stream buffering to defaults */
 		if (is_valid_fd(STDIN_FILENO) &&
--- a/tools/lvmcmdline.c
+++ b/tools/lvmcmdline.c
@@ -3339,6 +3339,7 @@ int lvm_split(char *str, int *argc, char
 /* Make sure we have always valid filedescriptors 0,1,2 */
 static int _check_standard_fds(void)
 {
+#ifdef __GLIBC__
 	int err = is_valid_fd(STDERR_FILENO);
 
 	if (!is_valid_fd(STDIN_FILENO) &&
@@ -3365,6 +3366,12 @@ static int _check_standard_fds(void)
 		       strerror(errno));
 		return 0;
 	}
+#else
+	if (!is_valid_fd(STDERR_FILENO) ||
+	    !is_valid_fd(STDOUT_FILENO) ||
+	    !is_valid_fd(STDIN_FILENO))
+		return 0;
+#endif
 
 	return 1;
 }
