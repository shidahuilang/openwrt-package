--- a/Makefile
+++ b/Makefile
@@ -638,10 +638,6 @@ ip6:
 	@echo + yourself, try adding IP6=4 to the make command line.
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	@echo
-	@echo Do you want to build with IPv6 anyway?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) (make noip6;exit 1);; esac'
-	@echo OK, I will remember that you really want to build with IPv6.
-	@echo You will not see this message again.
 	@$(TOUCH) ip6
 
 noip6:
@@ -678,20 +674,18 @@ an ua:
 	$(TOOLS)/$@ "$(LN)" src/tmail tmail
 	$(LN) $(TOOLS)/$@ .
 
-build:	OSTYPE rebuild rebuildclean bundled
+build:	OSTYPE rebuild rebuildclean
 
 OSTYPE:
 	@$(MAKE) ip$(IP)
 	@echo Building c-client for $(BUILDTYPE)...
 	@$(TOUCH) SPECIALS
-	echo `$(CAT) SPECIALS` $(EXTRASPECIALS) > c-client/SPECIALS
 	$(CD) c-client;$(MAKE) $(BUILDTYPE) EXTRACFLAGS='$(EXTRACFLAGS)'\
 	 EXTRALDFLAGS='$(EXTRALDFLAGS)'\
 	 EXTRADRIVERS='$(EXTRADRIVERS)'\
 	 EXTRAAUTHENTICATORS='$(EXTRAAUTHENTICATORS)'\
 	 PASSWDTYPE=$(PASSWDTYPE) SSLTYPE=$(SSLTYPE) IP=$(IP)\
-	 $(SPECIALS) $(EXTRASPECIALS)
-	echo $(BUILDTYPE) > OSTYPE
+	 $(SPECIALS) $(EXTRASPECIALS) OSTYPE=$(BUILDTYPE)
 	$(TOUCH) rebuild
 
 rebuild:
--- a/src/osdep/unix/Makefile
+++ b/src/osdep/unix/Makefile
@@ -96,11 +96,11 @@ CHECKPW=std
 LOGINPW=std
 SIGTYPE=bsd
 CRXTYPE=std
-ACTIVEFILE=/usr/lib/news/active
-SPOOLDIR=/usr/spool
+ACTIVEFILE=/var/lib/news/active
+SPOOLDIR=/var/spool
 MAILSPOOL=$(SPOOLDIR)/mail
 NEWSSPOOL=$(SPOOLDIR)/news
-RSHPATH=/usr/ucb/rsh
+RSHPATH=/usr/bin/rsh
 MD5PWD=/etc/cram-md5.pwd
 # Tries one of the test alternatives below if not specified.
 LOCKPGM=
@@ -154,7 +154,7 @@ BINARIES=osdep.o mail.o misc.o newsrc.o
  dummy.o pseudo.o netmsg.o flstring.o fdstring.o \
  rfc822.o nntp.o smtp.o imap4r1.o pop3.o \
  unix.o mbx.o mmdf.o tenex.o mtx.o news.o phile.o mh.o mx.o mix.o
-CFLAGS=-g
+CFLAGS=$(BASECFLAGS) $(EXTRACFLAGS) -DCHUNKSIZE=$(CHUNKSIZE)
 
 CAT=cat
 MAKE=make
@@ -162,6 +162,16 @@ MV=mv
 RM=rm -rf
 SH=sh
 
+OSCFLAGS= $(SSLCFLAGS) \
+	 -DCREATEPROTO=$(CREATEPROTO) -DEMPTYPROTO=$(EMPTYPROTO) \
+	 -DMD5ENABLE=\"$(MD5PWD)\" -DMAILSPOOL=\"$(MAILSPOOL)\" \
+	 -DANONYMOUSHOME=\"$(MAILSPOOL)/anonymous\" \
+	 -DACTIVEFILE=\"$(ACTIVEFILE)\" -DNEWSSPOOL=\"$(NEWSSPOOL)\" \
+	 -DRSHPATH=\"$(RSHPATH)\" -DLOCKPGM=\"$(LOCKPGM)\" \
+	 -DLOCKPGM1=\"$(LOCKPGM1)\" -DLOCKPGM2=\"$(LOCKPGM2)\" \
+	 -DLOCKPGM3=\"$(LOCKPGM3)\"
+
+LDFLAGS= $(BASELDFLAGS) $(EXTRALDFLAGS) $(SSLLDFLAGS)
 
 # Primary build command
 
@@ -174,7 +184,7 @@ BUILD=$(MAKE) build EXTRACFLAGS='$(EXTRA
 # Here if no make argument established
 
 missing: osdep.h
-	$(MAKE) all `$(CAT) SPECIALS`
+	$(MAKE) all $(SPECIALS)
 
 osdep.h:
 	@echo You must specify what type of system
@@ -674,7 +684,7 @@ slx:	# Secure Linux
 	@echo You are building for libc6/glibc versions of Secure Linux
 	@echo If you want libc5 versions you must use sl5 instead!
 	@echo If you want libc4 versions you must use sl4 instead!
-	$(BUILD) `$(CAT) SPECIALS` OS=$@ \
+	$(BUILD) $(SPECIALS) OS=$@ \
 	 SIGTYPE=psx CHECKPW=psx CRXTYPE=nfs \
 	 SPOOLDIR=/var/spool \
 	 ACTIVEFILE=/var/lib/news/active \
@@ -863,7 +873,7 @@ $(ARCHIVE): $(BINARIES)
 	@$(SH) ARCHIVE
 
 .c.o:
-	`$(CAT) CCTYPE` -c `$(CAT) CFLAGS` $*.c
+	$(CC) -c $(CFLAGS) $*.c
 
 
 # Cleanup
@@ -922,8 +932,8 @@ osdep.o:mail.h misc.h env.h fs.h ftl.h n
 	@echo If you get No such file error messages for files x509.h, ssl.h,
 	@echo pem.h, buffer.h, bio.h, and crypto.h, that means that OpenSSL
 	@echo is not installed on your system.  Either install OpenSSL first
-	@echo or build with command: make `$(CAT) OSTYPE` SSLTYPE=none
-	`$(CAT) CCTYPE` -c `$(CAT) CFLAGS` `$(CAT) OSCFLAGS` -c osdep.c
+	@echo or build with command: make $(OSTYPE) SSLTYPE=none
+	$(CC) -c $(CFLAGS) $(OSCFLAGS) -c osdep.c
 
 osdep.c: osdepbas.c osdepckp.c osdeplog.c osdepssl.c
 	$(CAT) osdepbas.c osdepckp.c osdeplog.c osdepssl.c > osdep.c
@@ -962,21 +972,14 @@ os_sol.h:
 
 # Once-only environment setup
 
-once:	onceenv ckp$(PASSWDTYPE) ssl$(SSLTYPE) osdep.c
+once:	ssl$(SSLTYPE) onceenv ckp$(PASSWDTYPE) osdep.c
 
 onceenv:
 	@echo Once-only environment setup...
-	echo $(CC) > CCTYPE
-	echo $(BASECFLAGS) '$(EXTRACFLAGS)' -DCHUNKSIZE=$(CHUNKSIZE) > CFLAGS
-	echo -DCREATEPROTO=$(CREATEPROTO) -DEMPTYPROTO=$(EMPTYPROTO) \
-	 -DMD5ENABLE=\"$(MD5PWD)\" -DMAILSPOOL=\"$(MAILSPOOL)\" \
-	 -DANONYMOUSHOME=\"$(MAILSPOOL)/anonymous\" \
-	 -DACTIVEFILE=\"$(ACTIVEFILE)\" -DNEWSSPOOL=\"$(NEWSSPOOL)\" \
-	 -DRSHPATH=\"$(RSHPATH)\" -DLOCKPGM=\"$(LOCKPGM)\" \
-	 -DLOCKPGM1=\"$(LOCKPGM1)\" -DLOCKPGM2=\"$(LOCKPGM2)\" \
-	 -DLOCKPGM3=\"$(LOCKPGM3)\" > OSCFLAGS
-	echo $(BASELDFLAGS) $(EXTRALDFLAGS) > LDFLAGS
 	echo "$(ARRC) $(ARCHIVE) $(BINARIES);$(RANLIB) $(ARCHIVE)" > ARCHIVE
+	echo "$(OSCFLAGS)" > OSCFLAGS
+	echo "$(CC) $(CFLAGS) $(OSCFLAGS) -shared  -Wl,-soname,libc-client.so \
+	-o $(SHLIBNAME) $(BINARIES) $(LDFLAGS)" >> ARCHIVE
 	echo $(OS) > OSTYPE
 	./drivers $(EXTRADRIVERS) $(DEFAULTDRIVERS) dummy
 	./mkauths $(EXTRAAUTHENTICATORS) $(DEFAULTAUTHENTICATORS)
@@ -1055,7 +1058,6 @@ sslsco:	sbasic sldsco
 sbasic:	# UNIX OpenSSL
 	@echo Building with SSL
 	$(LN) ssl_unix.c osdepssl.c
-	echo $(SSLCFLAGS) >> OSCFLAGS
 	echo "  ssl_onceonlyinit ();" >> linkage.c
 
 snopwd:	# Plaintext disable
@@ -1063,13 +1065,12 @@ snopwd:	# Plaintext disable
 	echo "  mail_parameters (NIL,SET_DISABLEPLAINTEXT,(void *) 2);" >> linkage.c
 
 sldunix:# Normal UNIX SSL load flags
-	echo $(SSLLDFLAGS) >> LDFLAGS
+	@echo Normal UNIX SSL load flags
 
 
 sldsco:	# SCO SSL load flags
 # Note: Tim Rice says that SSL has to be lunk before other libraries on SCO.
-	echo $(SSLLDFLAGS) `cat LDFLAGS` > LDFLAGS.tmp
-	mv LDFLAGS.tmp LDFLAGS
+	@echo SCO SSL load flags
 
 
 # A monument to a hack of long ago and far away...
