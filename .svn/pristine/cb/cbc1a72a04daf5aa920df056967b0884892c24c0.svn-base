From 23c263b07bb61e10a76918efb10e542889aa4691 Mon Sep 17 00:00:00 2001
From: Wei An Yen <j22461615@gmail.com>
Date: Wed, 29 May 2019 17:44:49 +0800
Subject: [PATCH 1/3] support for node 12

---
 authenticate_pam.cc | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/authenticate_pam.cc b/authenticate_pam.cc
index 6faf2fb..e15b6c3 100644
--- a/authenticate_pam.cc
+++ b/authenticate_pam.cc
@@ -104,7 +104,12 @@ void after_doing_auth(uv_work_t* req, int status) {
 		args[0] = Nan::New<String>(m->errorString.c_str()).ToLocalChecked();
 	}
 
+#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
+	Nan::AsyncResource *asyncResource = new Nan::AsyncResource("callback");
+	asyncResource->runInAsyncScope(Nan::GetCurrentContext()->Global(), Nan::New(m->callback), 1, args);
+#else
   Nan::MakeCallback(Nan::GetCurrentContext()->Global(), Nan::New(m->callback), 1, args);
+#endif	
 
 	m->callback.Reset();
 
@@ -144,21 +149,42 @@ NAN_METHOD(Authenticate) {
 
 	if(info.Length() == 4 && !info[3]->IsUndefined()) {
 		Local<Array> options = Local<Array>::Cast(info[3]);
+#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
+		Local<Value> res = Nan::Get(options, Nan::New<String>("serviceName").ToLocalChecked()).ToLocalChecked();
+#else
 		Local<Value> res = options->Get(Nan::New<String>("serviceName").ToLocalChecked());
+#endif
 		if(! res->IsUndefined()) {
 			Local<String> serviceName = Local<String>::Cast(res);
+#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
+			serviceName->WriteUtf8(Isolate::GetCurrent(), m->serviceName, sizeof(m->serviceName) - 1);
+#else
 			serviceName->WriteUtf8(m->serviceName, sizeof(m->serviceName) - 1);
+#endif
 		}
+#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
+		res = Nan::Get(options, Nan::New<String>("remoteHost").ToLocalChecked()).ToLocalChecked();
+#else
 		res = options->Get(Nan::New<String>("remoteHost").ToLocalChecked());
+#endif
 		if(! res->IsUndefined()) {
 			Local<String> remoteHost = Local<String>::Cast(res);
+#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
+			remoteHost->WriteUtf8(Isolate::GetCurrent(), m->remoteHost, sizeof(m->remoteHost) - 1);
+#else
 			remoteHost->WriteUtf8(m->remoteHost, sizeof(m->remoteHost) - 1);
+#endif
 		}
 	}
 	m->callback.Reset(callback);
 
+#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
+	username->WriteUtf8(Isolate::GetCurrent(), m->username, sizeof(m->username) - 1);
+	password->WriteUtf8(Isolate::GetCurrent(), m->password, sizeof(m->password) - 1);
+#else
 	username->WriteUtf8(m->username, sizeof(m->username) - 1);
 	password->WriteUtf8(m->password, sizeof(m->password) - 1);
+#endif
 
 	req->data = m;
 
@@ -167,9 +193,19 @@ NAN_METHOD(Authenticate) {
 	info.GetReturnValue().Set(Nan::Undefined());
 }
 
+#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
+void init(Local<Object> exports) {
+	Local<FunctionTemplate> tpl = Nan::New<FunctionTemplate>(Authenticate);
+	Nan::Set(exports,
+		Nan::New<String>("authenticate").ToLocalChecked(), 
+		Nan::GetFunction(tpl).ToLocalChecked()
+	);
+}
+#else
 void init(Handle<Object> exports) {
 	Local<FunctionTemplate> tpl = Nan::New<FunctionTemplate>(Authenticate);
 	exports->Set(Nan::New<String>("authenticate").ToLocalChecked(), tpl->GetFunction());
 }
+#endif
 
 NODE_MODULE(authenticate_pam, init);

From ddf98aace8555fce2f368dcba0016107e49987da Mon Sep 17 00:00:00 2001
From: Wei An Yen <j22461615@gmail.com>
Date: Thu, 30 May 2019 17:17:59 +0800
Subject: [PATCH 2/3] update nan

---
 package.json | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/package.json b/package.json
index b171d45..6040616 100644
--- a/package.json
+++ b/package.json
@@ -14,6 +14,6 @@
     "url": "https://github.com/RushPL/node-authenticate-pam.git"
   },
   "dependencies": {
-    "nan": "^2.3.2"
+    "nan": "^2.14.0"
   }
 }

From 5c06f8cf950a9992e902d061368b6442a8daf67c Mon Sep 17 00:00:00 2001
From: Wei An Yen <j22461615@gmail.com>
Date: Thu, 30 May 2019 18:32:46 +0800
Subject: [PATCH 3/3] remove ifdef and compatible with older  node version

---
 authenticate_pam.cc | 48 ++++++++-------------------------------------
 1 file changed, 8 insertions(+), 40 deletions(-)

diff --git a/authenticate_pam.cc b/authenticate_pam.cc
index e15b6c3..114d49c 100644
--- a/authenticate_pam.cc
+++ b/authenticate_pam.cc
@@ -104,12 +104,8 @@ void after_doing_auth(uv_work_t* req, int status) {
 		args[0] = Nan::New<String>(m->errorString.c_str()).ToLocalChecked();
 	}
 
-#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
 	Nan::AsyncResource *asyncResource = new Nan::AsyncResource("callback");
 	asyncResource->runInAsyncScope(Nan::GetCurrentContext()->Global(), Nan::New(m->callback), 1, args);
-#else
-  Nan::MakeCallback(Nan::GetCurrentContext()->Global(), Nan::New(m->callback), 1, args);
-#endif	
 
 	m->callback.Reset();
 
@@ -140,8 +136,8 @@ NAN_METHOD(Authenticate) {
 
 	Local<Function> callback = Local<Function>::Cast(callbackVal);
 
-	Local<String> username = Local<String>::Cast(usernameVal);
-	Local<String> password = Local<String>::Cast(passwordVal);
+	Nan::Utf8String *username = new Nan::Utf8String(usernameVal);
+	Nan::Utf8String *password = new Nan::Utf8String(passwordVal);
 
 
 	uv_work_t* req = new uv_work_t;
@@ -149,42 +145,21 @@ NAN_METHOD(Authenticate) {
 
 	if(info.Length() == 4 && !info[3]->IsUndefined()) {
 		Local<Array> options = Local<Array>::Cast(info[3]);
-#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
 		Local<Value> res = Nan::Get(options, Nan::New<String>("serviceName").ToLocalChecked()).ToLocalChecked();
-#else
-		Local<Value> res = options->Get(Nan::New<String>("serviceName").ToLocalChecked());
-#endif
 		if(! res->IsUndefined()) {
-			Local<String> serviceName = Local<String>::Cast(res);
-#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
-			serviceName->WriteUtf8(Isolate::GetCurrent(), m->serviceName, sizeof(m->serviceName) - 1);
-#else
-			serviceName->WriteUtf8(m->serviceName, sizeof(m->serviceName) - 1);
-#endif
+			Nan::Utf8String *serviceName = new Nan::Utf8String(res);
+			std::strncpy(m->serviceName, **serviceName, sizeof(m->serviceName));
 		}
-#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
 		res = Nan::Get(options, Nan::New<String>("remoteHost").ToLocalChecked()).ToLocalChecked();
-#else
-		res = options->Get(Nan::New<String>("remoteHost").ToLocalChecked());
-#endif
 		if(! res->IsUndefined()) {
-			Local<String> remoteHost = Local<String>::Cast(res);
-#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
-			remoteHost->WriteUtf8(Isolate::GetCurrent(), m->remoteHost, sizeof(m->remoteHost) - 1);
-#else
-			remoteHost->WriteUtf8(m->remoteHost, sizeof(m->remoteHost) - 1);
-#endif
+			Nan::Utf8String *remoteHost = new Nan::Utf8String(res);
+			std::strncpy(m->remoteHost, **remoteHost, sizeof(m->remoteHost));
 		}
 	}
 	m->callback.Reset(callback);
 
-#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
-	username->WriteUtf8(Isolate::GetCurrent(), m->username, sizeof(m->username) - 1);
-	password->WriteUtf8(Isolate::GetCurrent(), m->password, sizeof(m->password) - 1);
-#else
-	username->WriteUtf8(m->username, sizeof(m->username) - 1);
-	password->WriteUtf8(m->password, sizeof(m->password) - 1);
-#endif
+	std::strncpy(m->username, **username, sizeof(m->username));
+	std::strncpy(m->password, **password, sizeof(m->password));
 
 	req->data = m;
 
@@ -193,7 +168,6 @@ NAN_METHOD(Authenticate) {
 	info.GetReturnValue().Set(Nan::Undefined());
 }
 
-#if (NODE_MODULE_VERSION > NODE_11_0_MODULE_VERSION)
 void init(Local<Object> exports) {
 	Local<FunctionTemplate> tpl = Nan::New<FunctionTemplate>(Authenticate);
 	Nan::Set(exports,
@@ -201,11 +175,5 @@ void init(Local<Object> exports) {
 		Nan::GetFunction(tpl).ToLocalChecked()
 	);
 }
-#else
-void init(Handle<Object> exports) {
-	Local<FunctionTemplate> tpl = Nan::New<FunctionTemplate>(Authenticate);
-	exports->Set(Nan::New<String>("authenticate").ToLocalChecked(), tpl->GetFunction());
-}
-#endif
 
 NODE_MODULE(authenticate_pam, init);
