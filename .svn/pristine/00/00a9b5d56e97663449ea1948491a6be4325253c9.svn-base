--- a/lib/hgfs/hgfsUtil.c
+++ b/lib/hgfs/hgfsUtil.c
@@ -109,7 +109,7 @@ int
 HgfsConvertFromNtTimeNsec(struct timespec *unixTime, // OUT: Time in UNIX format
 			  uint64 ntTime) // IN: Time in Windows NT format
 {
-#ifdef __i386__
+#if defined(__i386__) && !__USE_TIME_BITS64
    uint32 sec;
    uint32 nsec;
 
@@ -134,7 +134,7 @@ HgfsConvertFromNtTimeNsec(struct timespe
       return -1;
    }
 
-#ifdef __i386__
+#if defined(__i386__) && !__USE_TIME_BITS64
    Div643232(ntTime - UNIX_EPOCH, 10000000, &sec, &nsec);
    unixTime->tv_sec = sec;
    unixTime->tv_nsec = nsec * 100;
--- a/lib/hgfsServer/hgfsServerLinux.c
+++ b/lib/hgfsServer/hgfsServerLinux.c
@@ -2573,8 +2573,12 @@ HgfsStatToFileAttr(struct stat *stats,
 #      define FMTTIMET "l"
 #   endif
 #else
+#ifdef __USE_TIME_BITS64
+#   define FMTTIMET __PRI64
+#else
 #   define FMTTIMET "l"
 #endif
+#endif
    LOG(4, "access: %"FMTTIMET"d/%"FMT64"u \nwrite: %"FMTTIMET"d/%"FMT64"u \n"
        "attr: %"FMTTIMET"d/%"FMT64"u\n",
        stats->st_atime, attr->accessTime, stats->st_mtime, attr->writeTime,
