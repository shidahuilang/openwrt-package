--- a/scripts/reset-admin.sh
+++ b/scripts/reset-admin.sh
@@ -37,7 +37,7 @@ function check_python_executable() {
 function validate_seafile_data_dir () {
     if [[ ! -d ${default_seafile_data_dir} ]]; then
         echo "Error: there is no seafile server data directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit 1;
     fi
--- a/scripts/seaf-fsck.sh
+++ b/scripts/seaf-fsck.sh
@@ -25,7 +25,7 @@ function usage () {
 function validate_ccnet_conf_dir () {
     if [[ ! -d ${default_ccnet_conf_dir} ]]; then
         echo "Error: there is no ccnet config directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit -1;
     fi
@@ -34,7 +34,7 @@ function validate_ccnet_conf_dir () {
 function validate_seafile_data_dir () {
     if [[ ! -d ${default_seafile_data_dir} ]]; then
         echo "Error: there is no seafile server data directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit 1;
     fi
--- a/scripts/seaf-fuse.sh
+++ b/scripts/seaf-fuse.sh
@@ -41,7 +41,7 @@ fi
 function validate_ccnet_conf_dir () {
     if [[ ! -d ${default_ccnet_conf_dir} ]]; then
         echo "Error: there is no ccnet config directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit -1;
     fi
@@ -50,7 +50,7 @@ function validate_ccnet_conf_dir () {
 function validate_seafile_data_dir () {
     if [[ ! -d ${default_seafile_data_dir} ]]; then
         echo "Error: there is no seafile server data directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit 1;
     fi
@@ -67,7 +67,7 @@ function validate_already_running () {
 function warning_if_seafile_not_running () {
     if ! pgrep -f "seafile-controller -c ${default_ccnet_conf_dir}" 2>/dev/null 1>&2; then
         echo
-        echo "Warning: seafile-controller not running. Have you run \"./seafile.sh start\" ?"
+        echo "Warning: seafile-controller not running. Have you run \"service seafile-server start\" ?"
         echo
     fi
 }
--- a/scripts/seaf-gc.sh
+++ b/scripts/seaf-gc.sh
@@ -27,7 +27,7 @@ function usage () {
 function validate_ccnet_conf_dir () {
     if [[ ! -d ${default_ccnet_conf_dir} ]]; then
         echo "Error: there is no ccnet config directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit -1;
     fi
@@ -36,7 +36,7 @@ function validate_ccnet_conf_dir () {
 function validate_seafile_data_dir () {
     if [[ ! -d ${default_seafile_data_dir} ]]; then
         echo "Error: there is no seafile server data directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit 1;
     fi
@@ -58,7 +58,7 @@ function check_component_running() {
 
 function validate_already_running () {
     if pid=$(pgrep -f "seafile-controller -c ${default_ccnet_conf_dir}" 2>/dev/null); then
-        echo "seafile server is still running, stop it by \"seafile.sh stop\""
+        echo "seafile server is still running, stop it by \"service seafile-server stop\""
         echo
         exit 1;
     fi
--- a/scripts/seafile.sh
+++ b/scripts/seafile.sh
@@ -53,7 +53,7 @@ function validate_running_user () {
 function validate_ccnet_conf_dir () {
     if [[ ! -d ${default_ccnet_conf_dir} ]]; then
         echo "Error: there is no ccnet config directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit -1;
     fi
@@ -62,7 +62,7 @@ function validate_ccnet_conf_dir () {
 function validate_central_conf_dir () {
     if [[ ! -d ${central_config_dir} ]]; then
         echo "Error: there is no conf/ directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit -1;
     fi
@@ -71,7 +71,7 @@ function validate_central_conf_dir () {
 function validate_seafile_data_dir () {
     if [[ ! -d ${default_seafile_data_dir} ]]; then
         echo "Error: there is no seafile server data directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit 1;
     fi
--- a/scripts/seahub.sh
+++ b/scripts/seahub.sh
@@ -78,7 +78,7 @@ function check_python_executable() {
 function validate_ccnet_conf_dir () {
     if [[ ! -d ${default_ccnet_conf_dir} ]]; then
         echo "Error: there is no ccnet config directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit -1;
     fi
@@ -87,7 +87,7 @@ function validate_ccnet_conf_dir () {
 function validate_seafile_data_dir () {
     if [[ ! -d ${default_seafile_data_dir} ]]; then
         echo "Error: there is no seafile server data directory."
-        echo "Have you run setup-seafile.sh before this?"
+        echo "Have you run setup-seafile before this?"
         echo ""
         exit 1;
     fi
@@ -133,7 +133,7 @@ fi
 function warning_if_seafile_not_running () {
     if ! pgrep -f "seafile-controller -c ${default_ccnet_conf_dir}" 2>/dev/null 1>&2; then
         echo
-        echo "Warning: seafile-controller not running. Have you run \"./seafile.sh start\" ?"
+        echo "Warning: seafile-controller not running. Have you run \"service seafile-server start\" ?"
         echo
         exit 1
     fi
@@ -167,7 +167,7 @@ function start_seahub () {
     sleep 5
     if ! pgrep -f "$gunicorn_exe seahub.wsgi:application -c ${gunicorn_conf}" 2>/dev/null 1>&2; then
         printf "\033[33mError:Seahub failed to start.\033[m\n"
-        echo "Please try to run \"./seahub.sh start\" again"
+        echo "Please try to run \"service seafile-server start\" again"
         exit 1;
     fi
     echo
--- a/scripts/setup-seafile-mysql.py
+++ b/scripts/setup-seafile-mysql.py
@@ -1557,8 +1557,7 @@ def report_success():
 Your seafile server configuration has been finished successfully.
 -----------------------------------------------------------------
 
-run seafile server:     ./seafile.sh { start | stop | restart }
-run seahub  server:     ./seahub.sh  { start <port> | stop | restart <port> }
+run seafile server:     service seafile-server { start | stop | restart }
 
 -----------------------------------------------------------------
 If you are behind a firewall, remember to allow input/output of these tcp ports:
--- a/scripts/setup-seafile.sh
+++ b/scripts/setup-seafile.sh
@@ -718,8 +718,7 @@ echo "----------------------------------
 echo "Your seafile server configuration has been completed successfully." 
 echo "-----------------------------------------------------------------"
 echo 
-echo "run seafile server:     ./seafile.sh { start | stop | restart }"
-echo "run seahub  server:     ./seahub.sh  { start <port> | stop | restart <port> }"
+echo "run seafile server:     service seafile-server { start | stop | restart }"
 echo
 echo "-----------------------------------------------------------------"
 echo "If the server is behind a firewall, remember to open these tcp ports:"
