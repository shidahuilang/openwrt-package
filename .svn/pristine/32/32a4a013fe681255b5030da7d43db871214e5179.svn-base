--- a/hcxdumptool.c
+++ b/hcxdumptool.c
@@ -480,10 +480,6 @@ if(rebootflag == true)
 		}
 	}
 
-EVP_cleanup();
-CRYPTO_cleanup_all_ex_data();
-ERR_free_strings();
-
 if(errorcount != 0) exit(EXIT_FAILURE);
 if(totflag == true) exit(USER_EXIT_TOT);
 exit(EXIT_SUCCESS);
@@ -7270,8 +7266,6 @@ return true;
 /*===========================================================================*/
 static inline bool tlsinit()
 {
-SSL_load_error_strings();
-OpenSSL_add_ssl_algorithms();
 if((tlsctx = SSL_CTX_new(SSLv23_server_method())) == NULL)
 	{
 	fprintf(stderr, "OpenSSl can't create SSL context\n");
@@ -7290,7 +7284,6 @@ if(SSL_CTX_use_PrivateKey_file(tlsctx, e
 if((eaptlsctx = (eaptlsctx_t*)malloc(EAPTLSCTX_SIZE)) == NULL) return false;
 memset(eaptlsctx, 0, EAPTLSCTX_SIZE);
 SSL_CTX_set_session_cache_mode(tlsctx, SSL_SESS_CACHE_OFF);
-SSL_CTX_set_ecdh_auto(tlsctx, 1);
 SSL_CTX_set_verify(tlsctx, (SSL_VERIFY_PEER|SSL_VERIFY_CLIENT_ONCE), eap_tls_clientverify_cb);
 #if (OPENSSL_VERSION_NUMBER >= 0x10100000L)
 SSL_CTX_set_min_proto_version(tlsctx, TLS1_VERSION);
@@ -7364,8 +7357,6 @@ if(gpiostatusled > 0)
 	}
 
 
-ERR_load_crypto_strings();
-OpenSSL_add_all_algorithms();
 opensslversion = OpenSSL_version_num();
 opensslversionmajor = (opensslversion & 0x10000000L) >> 28;
 opensslversionminor = (opensslversion & 0x01100000L) >> 20;
