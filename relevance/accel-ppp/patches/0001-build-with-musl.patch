Index: accel-ppp-1.13.0/accel-pppd/ctrl/ipoe/arp.c
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/ctrl/ipoe/arp.c
+++ accel-ppp-1.13.0/accel-pppd/ctrl/ipoe/arp.c
@@ -13,8 +13,8 @@
 #include <netinet/ip.h>
 #include <sys/socket.h>
 #include <sys/ioctl.h>
-#include <linux/if_arp.h>
-#include <linux/if_packet.h>
+#include <net/if_arp.h>
+#include <netpacket/packet.h>
 
 #include "list.h"
 #include "triton.h"
Index: accel-ppp-1.13.0/accel-pppd/ctrl/ipoe/ipoe.c
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/ctrl/ipoe/ipoe.c
+++ accel-ppp-1.13.0/accel-pppd/ctrl/ipoe/ipoe.c
@@ -15,7 +15,7 @@
 #include <sys/socket.h>
 #include <sys/ioctl.h>
 #include <linux/if.h>
-#include <linux/if_arp.h>
+#include <net/if_arp.h>
 #include <linux/route.h>
 
 #include <pcre.h>
Index: accel-ppp-1.13.0/accel-pppd/ctrl/l2tp/l2tp.c
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/ctrl/l2tp/l2tp.c
+++ accel-ppp-1.13.0/accel-pppd/ctrl/l2tp/l2tp.c
@@ -853,7 +853,7 @@ static void l2tp_tunnel_free_sessions(st
 	void *sessions = conn->sessions;
 
 	conn->sessions = NULL;
-	tdestroy(sessions, (__free_fn_t)l2tp_session_free);
+	tdestroy(sessions, (void (*) (void *))l2tp_session_free);
 	/* Let l2tp_session_free() handle the session counter and
 	 * the reference held by the tunnel.
 	 */
Index: accel-ppp-1.13.0/accel-pppd/ctrl/pppoe/pppoe.c
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/ctrl/pppoe/pppoe.c
+++ accel-ppp-1.13.0/accel-pppd/ctrl/pppoe/pppoe.c
@@ -8,10 +8,10 @@
 #include <fcntl.h>
 #include <sys/socket.h>
 #include <sys/ioctl.h>
+#include <linux/sockios.h>
 #include <net/ethernet.h>
 #include <netpacket/packet.h>
 #include <arpa/inet.h>
-#include <printf.h>
 
 #include "crypto.h"
 
Index: accel-ppp-1.13.0/accel-pppd/ifcfg.c
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/ifcfg.c
+++ accel-ppp-1.13.0/accel-pppd/ifcfg.c
@@ -9,6 +9,7 @@
 #include <arpa/inet.h>
 #include <sys/socket.h>
 #include <sys/ioctl.h>
+#include <linux/sockios.h>
 #include <linux/route.h>
 #include "linux_ppp.h"
 
@@ -376,4 +377,4 @@ int __export ap_session_vrf(struct ap_se
 
 	return 0;
 }
-#endif
\ No newline at end of file
+#endif
Index: accel-ppp-1.13.0/accel-pppd/include/ap_session.h
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/include/ap_session.h
+++ accel-ppp-1.13.0/accel-pppd/include/ap_session.h
@@ -5,6 +5,7 @@
 
 #include "triton.h"
 #include "ap_net.h"
+#include "pthread.h"
 
 //#define AP_SESSIONID_LEN 16
 #define AP_IFNAME_LEN 16
@@ -124,9 +125,9 @@ struct ap_session
 
 struct ap_session_stat
 {
-	unsigned int active;
-	unsigned int starting;
-	unsigned int finishing;
+	uint32_t active;
+	uint32_t starting;
+	uint32_t finishing;
 };
 
 
Index: accel-ppp-1.13.0/accel-pppd/ppp/ppp.c
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/ppp/ppp.c
+++ accel-ppp-1.13.0/accel-pppd/ppp/ppp.c
@@ -10,6 +10,7 @@
 #include <signal.h>
 #include <sys/socket.h>
 #include <sys/ioctl.h>
+#include <linux/sockios.h>
 #include "linux_ppp.h"
 
 #include "crypto.h"
Index: accel-ppp-1.13.0/accel-pppd/session.c
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/session.c
+++ accel-ppp-1.13.0/accel-pppd/session.c
@@ -105,7 +105,7 @@ int __export ap_session_starting(struct
 		ses->state = AP_STATE_STARTING;
 	}
 
-	__sync_add_and_fetch(&ap_session_stat.starting, 1);
+	__sync_add_and_fetch_4(&ap_session_stat.starting, 1);
 
 	pthread_rwlock_wrlock(&ses_lock);
 	list_add_tail(&ses->entry, &ses_list);
@@ -296,7 +296,7 @@ void __export ap_session_terminate(struc
 	else
 		__sync_sub_and_fetch(&ap_session_stat.starting, 1);
 
-	__sync_add_and_fetch(&ap_session_stat.finishing, 1);
+	__sync_add_and_fetch_4(&ap_session_stat.finishing, 1);
 	ses->terminating = 1;
 	ses->state = AP_STATE_FINISHING;
 
@@ -354,7 +354,7 @@ static void generate_sessionid(struct ap
 		sid = ++seq;
 		spin_unlock(&seq_lock);
 #else
-		sid = __sync_add_and_fetch(&seq, 1);
+		sid = __sync_add_and_fetch_4(&seq, 1);
 #endif
 
 		clock_gettime(CLOCK_MONOTONIC, &ts);
Index: accel-ppp-1.13.0/accel-pppd/session_backup.c
===================================================================
--- accel-ppp-1.13.0.orig/accel-pppd/session_backup.c
+++ accel-ppp-1.13.0/accel-pppd/session_backup.c
@@ -5,6 +5,7 @@
 #include <unistd.h>
 #include <netinet/in.h>
 
+#include "pthread.h"
 #include "events.h"
 #include "triton.h"
 #include "log.h"
