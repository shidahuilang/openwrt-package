#!/bin/sh

get_device_info(){
	DEVPORT=$(uci -q get modeminfo.@modeminfo[0].device_qmi)
	DEVCTL=$(echo $DEVPORT | awk -F [\/] '{print $NF}')
	if ! [ -x /sbin/uqmi ]; then
 		logger -t "luci-app-modeminfo" "uqmi not found!"
		exit 1
        fi
	if [ $DEVPORT ]; then
		QPROXY=$(uci -q get modeminfo.@modeminfo[0].qmi_proxy)
                if [ "x${QPROXY}" = "x" ]; then           
                        export MBIM=""
                else                              
                        export MBIM="-m"   
                fi
	else
	       	for qmi in $(ls /dev/cdc-wdm*); do
                	if [ $qmi ]; then
               	        	QMI_DEVICE=$qmi
	               	        if ! [ -n $(which uqmi) ]; then
	                                logger -t "luci-app-modeminfo" "uqmi not found or installed!"
        	                        exit 0
	               	        fi
	                else
        	                logger -t "luci-app-modeminfo" "Device is no QMI mode or not found!"
               		        exit 0
	                fi
        	done
		if [ $qmi ]; then
			uci set modeminfo.@modeminfo[0].device_qmi="$qmi"
			uci commit modeminfo
			break
		fi
	fi	
}

get_data(){
	case $1 in
		hw)
			uqmi ${MBIM} -s -d ${DEVPORT} --get-imei
		;;
		net)
			uqmi ${MBIM} -s -d ${DEVPORT} \
				--get-serving-system 
		;;
		sig)
			uqmi ${MBIM} -s -d ${DEVPORT} \
				--get-signal-info 
		;;
		lte)
			uqmi ${MBIM} -d ${DEVPORT} \
				--get-lte-cphy-ca-info
		;;
		base)
			uqmi ${MBIM} -s -d ${DEVPORT} \
				--get-system-info
		;;
		mimo)
			uqmi ${MBIM} -s -d ${DEVPORT} \
				--nas-get-tx-rx-info=$MODE
		;;
		sta)
			uqmi ${MBIM} -d ${DEVPORT} \
				--get-cell-location-info
		;;
	esac
	killall -9 uqmi >/dev/null 2>&1
}

get_hardware_info(){
	DATA=$(get_data hw)
	MANUF=$(cat $(readlink -f /sys/class/usbmisc/${DEVCTL})/../../../manufacturer)
	MODEL="$(cat $(readlink -f /sys/class/usbmisc/${DEVCTL})/../../../product)"
	DEVICE="$MANUF $MODEL"
	IMEI=$(echo "$DATA" | tail -1 | tr -d '"')
}

get_signal_info(){
	DATA=$(get_data net)
	eval $(jsonfilter -s "$DATA" -e "COPS=$['plmn_description']" \
		-e "COPS_MCC=$['plmn_mcc']" \
		-e "COPS_MNC_RAW=$['plmn_mnc']" \
		-e "REG=$['registration']" \
		-e "ROAM=$['roaming']" )
	DATA=$(get_data sig)
	eval $(jsonfilter -s "$DATA" -e "MODE=$['type']" \
		-e "CSQ_RSSI=$['rssi']" \
		-e "RSRP=$['rsrp']" \
		-e "RSRQ=$['rsrq']" \
		-e "SINR=$['snr']")
	DATA=$(get_data base)
	eval $(jsonfilter -s "$DATA" -e "TAC_NUM=$['$MODE']['tracking_area_code']" \
		-e "CELL=$['$MODE']['cell_id']" \
		-e "ENBID=$['$MODE']['enodeb_id']")
	DATA=$(get_data sta)
	EARFCN=$(echo "$DATA" | awk '/channel/{gsub(",",""); print $2}' | head -1)
	PCI=$(echo "$DATA" | awk '/serving_cell_id/{gsub(",",""); print $2}' | head -1)
	case $MODE in
		LTE)
			DATA=$(get_data lte)
			eval $(jsonfilter -s "$DATA" -e "BW=$['primary']['bandwidth']")
			CA=$(echo "$DATA" |  awk -F [:] '/secondary_/{gsub("\"","");print $1}')
			LTE_CA=$(echo "$CA" | wc -l)
			if [ $LTE_CA -ge 1 ]; then
				BWCA=0
				for a in $CA; do
					eval $(jsonfilter -s "$DATA" -e "SCx=$['$a']['band']" \
						-e "BWC=$['$a']['bandwidth']")
					SCC="$SCC+$SCx"
					BWCA=$(($BWCA+$BWC))
				done
				BWCA=$(($BW+$BWCA))
			fi
			
		;;
	esac
	MODE=$(echo $MODE | awk '{print toupper($1)}')
	if [ "$COPS_MNC_RAW" -lt "10" ]; then
		COPS_MNC=0${COPS_MNC_RAW}
	else
		COPS_MNC=${COPS_MNC_RAW}
	fi
	if [ "x${COPS}" = "x" ]; then
		COPS="${COPS_MCC} ${COPS_MNC}"
	fi
 
	SINR=$(echo $SINR | awk '{printf "%.0f\n", $1}')
	LAC=$(echo $TAC_NUM | awk '{printf "%x\n", toupper($1)}')
	ENBID_h=$(printf %x $ENBID)
	CELL_h=$(printf %x $CELL)
	if [ "$CELL" -le 15 ]; then
		CELL_h="0${CID_h}"
	fi
	CID="${ENBID_h}${CELL_h}"
	CID_NUM=$(printf %d 0x$CID)

	case $REG in
		not_registered) REGST=0 ;;
		registered)
			case $ROAM in
				true) REGST=5 ;;
				*) REGST=1 ;;
			esac
		;;
		searching) REGST=2 ;;
		registering_denied) REGST=3 ;;
		unknown) REGST=4 ;;
	esac
 
	CSQ_PER=$(echo $CSQ_RSSI |awk '{printf "%d\n", (100*(1-(-50 - $1)/(-50 - -120)))}')
        [ $CSQ_RSSI -ge -110 ] && CSQ_COL="black"
	[ $CSQ_RSSI -ge -105 ] && CSQ_COL="red"
	[ $CSQ_RSSI -ge -95 ] && CSQ_COL="orange"
	[ $CSQ_RSSI -ge -75 ] && CSQ_COL="green"
	if [ $CSQ_PER -gt 100 ]; then
		 CSQ_PER=100
	elif [ $CSQ_PER -lt 0 ]; then
		CSQ_PER=0
	fi

	DECIMAL=$(uci -q get modeminfo.@modeminfo[0].general)
	if [ "x${DECIMAL}" != "x" ]; then
                LAC=$LAC_NUM
                CID=$CID_NUM
        fi
}

function get_data_in(){
        get_hardware_info >/dev/null 2>&1
        get_signal_info >/dev/null 2>&1
}

get_hwinfo(){
	continue
}
