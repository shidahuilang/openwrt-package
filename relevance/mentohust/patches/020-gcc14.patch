--- a/src/strnormalize.c
+++ b/src/strnormalize.c
@@ -16592,11 +16592,11 @@ void str_normalize_gbk(char *text, unsig
 	text[i_to] = 0;
 }
 
-int gbk_to_utf8(const char *from, unsigned int from_len, char **to, unsigned int *to_len)
+int gbk_to_utf8(const char *from, size_t from_len, char **to, size_t *to_len)
 {
 	char *result = *to;
-	unsigned i_from = 0;
-	unsigned i_to = 0;
+	size_t i_from = 0;
+	size_t i_to = 0;
 	unsigned flag = 0;
 
 	if (from_len == 0 || from == NULL || to == NULL || result == NULL)
--- a/src/strnormalize.h
+++ b/src/strnormalize.h
@@ -12,6 +12,8 @@
 #ifndef __STRNORMALIZE_H__
 #define __STRNORMALIZE_H__
 
+#include <stddef.h>
+
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -25,7 +27,7 @@ void str_normalize_init();
 void str_normalize_gbk(char *text, unsigned options);
 void str_normalize_utf8(char *text, unsigned options);
 
-int gbk_to_utf8(const char *from, unsigned int from_len, char **to, unsigned int *to_len);
+int gbk_to_utf8(const char *from, size_t from_len, char **to, size_t *to_len);
 int utf8_to_gbk(const char *from, unsigned int from_len, char **to, unsigned int *to_len);
 
 #ifdef __cplusplus
